//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections;

public class NetworkManager
{
	
	#region Attributs publics
	public String TypeName;
	public String GameName;
	public HostData[] hostList;
	#endregion
	
	#region Méthodes
	public NetworkManager(String type, String Name){
		this.TypeName = type;
		this.GameName = Name;
		this.hostList = null;
	}
	
	public String getTypeName(){
		return this.TypeName;
	}
	
	public String getGameName(){
		return this.GameName;
	}
	
	public HostData[] getHostList(){
		return this.hostList;
	}
	
	public void setTypeName(String val){
		this.TypeName = val;
	}
	
	public void setGameName(String val){
		this.GameName = val;
	}
	
	public void setHostList(HostData[] val){
		this.hostList = val;
	}
	
	public void StartServer()
	{
		
		Network.InitializeServer(5, 25000, !Network.HavePublicAddress());
		MasterServer.RegisterHost(this.getTypeName(), this.getGameName());
	}
	
	public void RefreshHostList()
	{
		MasterServer.RequestHostList(this.getTypeName());
		if (MasterServer.PollHostList().Length > 0) {
			this.setHostList(MasterServer.PollHostList());
		}
	}
	
	public void JoinServer(HostData hostData)
	{
		Network.Connect(hostData);
	}
	#endregion
	
}
